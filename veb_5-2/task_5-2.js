// –ú–æ–¥—É–ª—å 5. –ó–∞–Ω—è—Ç–∏–µ 10. –ü—Ä–æ—Ç–æ—Ç–∏–ø—ã –∏ –∫–ª–∞—Å—Å—ã

// Example 2 - –•—Ä–∞–Ω–∏–ª–∏—â–µ
console.log('Example 2 - –•—Ä–∞–Ω–∏–ª–∏—â–µ:');
console.log('--------------------------------------------');

// –ù–∞–ø–∏—à–∏ –∫–ª–∞—Å—Å Store, –∫–æ—Ç–æ—Ä—ã–π —Å–æ–∑–¥–∞—ë—Ç —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –∑–∞—è–≤–æ–∫.
// –ù–∞–ø–∏—à–∏ –∫–ª–∞—Å—Å Storage –∫–æ—Ç–æ—Ä—ã–π —Å–æ–∑–¥–∞—ë—Ç –æ–±—ä–µ–∫—Ç—ã –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–∫–ª–∞–¥–æ–º —Ç–æ–≤–∞—Ä–æ–≤.–ü—Ä–∏ –≤—ã–∑–æ–≤–µ –±—É–¥–µ—Ç –ø–æ–ª—É—á–∞—Ç—å –æ–¥–∏–Ω –∞—Ä–≥—É–º–µ–Ω—Ç - –Ω–∞—á–∞–ª—å–Ω—ã–π –º–∞—Å—Å–∏–≤ —Ç–æ–≤–∞—Ä–æ–≤, –∏ –∑–∞–ø–∏—Å—ã–≤–∞—Ç—å –µ–≥–æ –≤ —Å–≤–æ–π—Å—Ç–≤–æ items.

// –î–æ–±–∞–≤—å –º–µ—Ç–æ–¥—ã –∫–ª–∞—Å—Å–∞:
// getItems() - –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–∞—Å—Å–∏–≤ —Ç–æ–≤–∞—Ä–æ–≤.
// addItem(item) - –ø–æ–ª—É—á–∞–µ—Ç –Ω–æ–≤—ã–π —Ç–æ–≤–∞—Ä –∏ –¥–æ–±–∞–≤–ª—è–µ—Ç –µ–≥–æ –∫ —Ç–µ–∫—É—â–∏–º.
// removeItem(item) - –ø–æ–ª—É—á–∞–µ—Ç —Ç–æ–≤–∞—Ä –∏, –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å, —É–¥–∞–ª—è–µ—Ç –µ–≥–æ –∏–∑ —Ç–µ–∫—É—â–∏—Ö.



// –ò—Å—Ö–æ–¥–Ω—ã–µ —ç–∫–∑–µ–º–ø–ª—è—Ä—ã, –∫–æ—Ç–æ—Ä—ã–µ –¥–æ–ª–∂–Ω—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ —Ä–∞–±–æ—Ç–∞—Ç—å —Å —Å–æ–∑–¥–∞–Ω–Ω—ã–º –∫–ª–∞—Å—Å–æ–º
const storage = new Storage(['üçé', 'üçã', 'üçá', 'üçë']);

const items = storage.getItems();
console.table(items); // [ 'üçé', 'üçã', 'üçá', 'üçë' ]

storage.addItem('üçå');
console.table(storage.items); // [ 'üçé', 'üçã', 'üçá', 'üçë', 'üçå' ]

storage.removeItem('üçã');
console.table(storage.items); // [ 'üçé', 'üçá', 'üçë', 'üçå' ]
    
console.log('********************************************');


//!=========================================================


// Example 3 - User
console.log('Example 3 - User:');
console.log('--------------------------------------------');

// –ù–∞–ø–∏—à–∏ –∫–ª–∞—Å—Å User –∫–æ—Ç–æ—Ä—ã–π —Å–æ–∑–¥–∞—ë—Ç –æ–±—ä–µ–∫—Ç —Å–æ —Å–≤–æ–π—Å—Ç–≤–∞–º–∏ login –∏ email. –û–±—ä—è–≤–∏ –ø—Ä–∏–≤–∞—Ç–Ω—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞ #login –∏ #email, –¥–æ—Å—Ç—É–ø –∫ –∫–æ—Ç–æ—Ä—ã–º —Å–¥–µ–ª–∞–π —á–µ—Ä–µ–∑ –≥–µ—Ç—Ç–µ—Ä –∏ —Å–µ—Ç—Ç–µ—Ä login –∏ email.

class User {
    #login;
    #email;

    constructor({ login, email }) {
        this.#login = login;
        this.#email = email;
    }

    get login() {
        return this.#login;
    }

    set login(login) {
        this.#login = login;
    }

    get email() {
        return this.#email;
    }

    set email(email) {
        this.#email = email;
    }
}

// –ò—Å—Ö–æ–¥–Ω—ã–µ —ç–∫–∑–µ–º–ø–ª—è—Ä—ã –¥–ª—è —Å–æ–∑–¥–æ–≤–∞–µ–º–æ–≥–æ –ø–æ –∑–∞–¥–∞–Ω–∏—é –∫–ª–∞—Å—Å–∞
const mango = new User({
  login: 'Mango',
  email: 'mango@dog.woof',
});

console.log(mango.login); // Mango
mango.login = 'Mangodoge';
console.log(mango.login); // Mangodoge

const poly = new User({
  login: 'Poly',
  email: 'poly@mail.com',
});

console.log(poly.email); // poly@mail.com
poly.email = 'poly12345@mail.com';
console.log(poly.email); // poly12345@mail.com
console.log('********************************************');


//!=========================================================


// Example 4 - –ó–∞–º–µ—Ç–∫–∏
console.log('Example 4 - –ó–∞–º–µ—Ç–∫–∏:');
console.log('--------------------------------------------');

// –ù–∞–ø–∏—à–∏ –∫–ª–∞—Å—Å Notes –∫–æ—Ç–æ—Ä—ã–π —É–ø—Ä–∞–≤–ª—è–µ—Ç –∫–æ–ª–ª–µ–∫—Ü–∏–µ–π –∑–∞–º–µ—Ç–æ–∫ –≤ —Å–≤–æ–π—Å—Ç–≤–µ items. –ó–∞–º–µ—Ç–∫–∞ —ç—Ç–æ –æ–±—ä–µ–∫—Ç —Å–æ —Å–≤–æ–π—Å—Ç–≤–∞–º–∏ text –∏ priority. –î–æ–±–∞–≤—å –∫–ª–∞—Å—Å—É —Å—Ç–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–≤–æ–π—Å—Ç–≤–æ Priority, –≤ –∫–æ—Ç–æ—Ä–æ–º –±—É–¥–µ—Ç —Ö—Ä–∞–Ω–∏—Ç—å—Å—è –æ–±—ä–µ–∫—Ç —Å –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞–º–∏.

// {
//   LOW: 'low',
//   NORMAL: 'normal',
//   HIGH: 'high'
// }
// –î–æ–±–∞–≤—å –º–µ—Ç–æ–¥—ã addNote(note), removeNote(text) –∏ updatePriority(text, newPriority).

class Notes {
    static Priority = {
        LOW: 'low',
        NORMAL: 'normal',
        HIGH: 'high'
    };

    static findeNoteIndexByText(items, text) {
        return items.findIndex((note) => note.text === text);
    };

    constructor(items) {
        this.items = items;
     }
    
    addNote(note) { 
        this.items.push(note);
    }

    removeNote(text) { 
        const index = Notes.findeNoteIndexByText(this.items, text);
        this.items.splice(index, 1);
    }

    updatePriority(text, newPriority) {
        const index = Notes.findeNoteIndexByText(this.items, text);
        this.items[index].priority = newPriority;
    }
};

const myNotes = new Notes([]);

myNotes.addNote({ text: '–ú–æ—è –ø–µ—Ä–≤–∞—è –∑–∞–º–µ—Ç–∫–∞', priority: Notes.Priority.LOW });
console.log(myNotes.items);

myNotes.addNote({
  text: '–ú–æ—è –≤—Ç–æ—Ä–∞—è –∑–∞–º–µ—Ç–∫–∞',
  priority: Notes.Priority.NORMAL,
});
console.log(myNotes.items);

myNotes.removeNote('–ú–æ—è –ø–µ—Ä–≤–∞—è –∑–∞–º–µ—Ç–∫–∞');
console.log(myNotes.items);

myNotes.updatePriority('–ú–æ—è –≤—Ç–æ—Ä–∞—è –∑–∞–º–µ—Ç–∫–∞', Notes.Priority.HIGH);
console.log(myNotes.items);
console.log('********************************************')


//!=========================================================


// Example 5 - Toggle
console.log('Example 5 - Toggle:');
console.log('--------------------------------------------');

// –ù–∞–ø–∏—à–∏—Ç–µ –∫–ª–∞—Å—Å Toggle –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –æ–±—ä–µ–∫—Ç –Ω–∞—Å—Ç—Ä–æ–µ–∫ {isOpen: boolean} –∏ –æ–±—ä—è–≤–ª—è–µ—Ç –æ–¥–Ω–æ —Å–≤–æ–π—Å—Ç–≤–æ on - —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤–∫–ª/–≤—ã–∫–ª (true/false). –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –∑–Ω–∞—á–µ–Ω–∏–µ —Å–≤–æ–π—Å—Ç–≤–∞ on –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å false.

// –°–æ–∑–¥–∞–µ–º –∫–ª–∞—Å—Å
class Toggle {
    constructor(settings) {
        // this.on = settings ? settings.isOpen : false;
        this.on = settings?.isOpen || false;
    }

    // constructor({ isOpen = false } = {}) {
    //     this.on = isOpen;
    // }

    toggle() {
        this.on = !this.on;
    }
};

// –ò—Å—Ö–æ–¥–Ω—ã–µ —ç–∫–∑–µ–º–ø–ª—è—Ä—ã, –∫–æ—Ç–æ—Ä—ã–µ –¥–æ–ª–∂–Ω—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ —Å—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å —Å —Å–æ–∑–¥–∞–Ω—ã–º –ø–æ –∑–∞–¥–∞–Ω–∏—é –∫–ª–∞—Å—Å–æ–º
const firstToggle = new Toggle({ isOpen: true });
console.group('firstToggle');
console.log(firstToggle.on);
firstToggle.toggle();
console.log(firstToggle.on);
console.groupEnd('firstToggle');
console.log('--------------------------------------------');

const secondToggle = new Toggle();
console.group('secondToggle');
console.log(secondToggle.on);
secondToggle.toggle();
console.log(secondToggle.on);
console.groupEnd('secondToggle');
console.log('********************************************');